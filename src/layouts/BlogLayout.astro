---
import BaseLayout from "./BaseLayout.astro";
import Breadcrumb from "../components/utils/Breadcrumb.astro";

const { frontmatter } = Astro.props;
const { title, description, image, publishDate, tags, author, canonical } = frontmatter;

const breadcrumbTrail = [
    { label: "Home", url: "/" },
    { label: "Blog", url: "/posts" },
    { label: title, url: null }, // Current page has no link
];
---

<BaseLayout title={title} description={description} image={image} subTitle={title} canonicalURL={canonical}>
    <div class="max-w-4xl mx-auto my-8 px-4 blog-content-container">
        <!-- Breadcrumb -->
        <div class="mb-6">
            <Breadcrumb trail={breadcrumbTrail} />
        </div>

        <div class="w-full justify-center flex flex-col">
            <h1 class="text-3xl font-bold mb-4 text-center">{title}</h1>
            
            {tags &&
                <div class="pb-4 mx-auto">
                    <div class="tags-container">
                        {tags.map((tag) => (
                            <a href={`/posts/tag/${tag.toLowerCase().replace(/\s+/g, '-')}`} class="tag-button blog-tag-button">
                                {tag}
                            </a>
                        ))}
                    </div>
                </div>
            }

            {publishDate &&
                <div class="text-lg text-gray-600 mb-4 text-center">
                    Published on {new Date(publishDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
                </div>
            }

            {author &&
                <div class="text-md text-gray-600 mb-6 text-center">
                    By {author}
                </div>
            }

            <div class="mx-auto mb-8 max-w-3xl">
                {image && image.url && (
                    <img 
                        src={image.url} 
                        alt={image.alt || title} 
                        class="w-full h-auto rounded-lg shadow-md"
                    />
                )}
                {(!image || !image.url) && frontmatter.image && typeof frontmatter.image === 'string' && (
                    <img 
                        src={frontmatter.image} 
                        alt={title} 
                        class="w-full h-auto rounded-lg shadow-md"
                    />
                )}
                {(!image || !image.url) && frontmatter.image && typeof frontmatter.image === 'object' && frontmatter.image.url && (
                    <img 
                        src={frontmatter.image.url} 
                        alt={frontmatter.image.alt || title} 
                        class="w-full h-auto rounded-lg shadow-md"
                    />
                )}
            </div>

            <article class="prose mx-auto dark:prose-invert blog-content">
                <slot/>
            </article>
        </div>
    </div>
</BaseLayout>

<style>
    .blog-content-container {
        //background-image: url('/images/grid-background.jpg');
        //background-size: cover;
        padding: 2rem;
        border-radius: 0.5rem;
        background-color: var(--color-wewak-200);
        background-blend-mode: overlay;
    }
    
    .blog-content {
        max-width: 100%;
        line-height: 1.8;
    }
    
    .blog-content h2 {
        color: var(--color-sunshade-600);
        margin-top: 2rem;
        margin-bottom: 1rem;
        font-size: 1.75rem;
    }
    
    .blog-content h3 {
        color: var(--color-sunshade-500);
        margin-top: 1.5rem;
        margin-bottom: 0.75rem;
        font-size: 1.5rem;
    }
    
    .blog-content a {
        color: var(--color-sunshade-600);
        text-decoration: underline;
    }
    
    .blog-content a:hover {
        color: var(--color-sunshade-700);
    }
    
    .blog-content blockquote {
        border-left: 4px solid var(--color-negroni-400);
        padding-left: 1rem;
        font-style: italic;
        color: var(--color-charcoal-600);
    }
</style>
